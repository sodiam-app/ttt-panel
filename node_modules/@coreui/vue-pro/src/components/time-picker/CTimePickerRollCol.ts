import { defineComponent, h, onUpdated, PropType, ref } from 'vue'

export interface Element {
  value: number | string
  label: number | string
}

const CTimePickerRollCol = defineComponent({
  name: 'CTimePickerRollCol',
  props: {
    elements: {
      type: Array as PropType<Element[]>,
      required: true,
    },
    selected: {
      type: [Number, String],
    },
  },
  emits: ['click'],
  setup(props, { emit }) {
    const init = ref(true)
    const colRef = ref<HTMLDivElement>()

    onUpdated(() => {
      const nodeEl = colRef.value?.querySelector('.selected')
      if (nodeEl && nodeEl instanceof HTMLElement) {
        colRef.value?.scrollTo({
          top: nodeEl.offsetTop,
          behavior: init.value ? 'auto' : 'smooth',
        })
      }
      init.value = false
    })

    return () =>
      h(
        'div',
        { class: 'time-picker-roll-col', ref: colRef },
        props.elements.map((element) => {
          return h(
            'div',
            {
              class: [
                'time-picker-roll-cell',
                {
                  selected: element.value === props.selected,
                },
              ],
              onClick: () => emit('click', element.value),
              role: 'button',
            },
            element.label,
          )
        }),
      )
  },
})
export { CTimePickerRollCol }
